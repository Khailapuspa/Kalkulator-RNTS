import React, { useState } from 'react';
import { View, Text, TouchableOpacity, StyleSheet, TextInput } from 'react-native';

const Calculator = () => {
  const [input, setInput] = useState("0");

  const handlePress = (value: string) => {
    if (value === "C") {
      setInput("0");
    } else {
      setInput(input === "0" ? value : input + value);
    }
  };

  // const handleClear = () => {
  //   setInput('');
  // };

  const handleDelete = () => {
    setInput(prevInput => prevInput.slice(0, -1)); // Menghapus karakter terakhir dari input
  };

  // const handlePercentage = () => {
    
  //     const result = eval(input) / 100; // Hitung persentase dari nilai input
  //     setInput(result.toString() + '%');
    
  // };

  // const handleDecimal = () => {
  //   // Pastikan tidak ada lebih dari satu titik desimal dalam input
  //   if (!input.includes('.')) {
  //     setInput(prevInput => prevInput + '.');
  //   }
  // };

  const handleCalculate = () => {
    try {
      const result = eval(input);
      setInput(Number.isFinite(result) ? result.toString() : "Error");
    } catch (error) {
      setInput("Error");
    }
  };
  

  const operatorConfig = {
    '/': 'รท',
    '*': 'ร',
    // ... other operators
  };


  const layout = [
    [
      { inputValue: "7", style: styles.button, handler: handlePress },
      { inputValue: "8", style: styles.button, handler: handlePress },
      { inputValue: "9", style: styles.button, handler: handlePress },
      { inputValue: "/", style: styles.operatorButton, handler: handlePress, displayText: operatorConfig['/'] },
    ],
    [
      { inputValue: "4", style: styles.button, handler: handlePress },
      { inputValue: "5", style: styles.button, handler: handlePress },
      { inputValue: "6", style: styles.button, handler: handlePress },
      { inputValue: "*", style: styles.operatorButton, handler: handlePress, displayText: operatorConfig['*'] },
    ],
    [
      { inputValue: "1", style: styles.button, handler: handlePress },
      { inputValue: "2", style: styles.button, handler: handlePress },
      { inputValue: "3", style: styles.button, handler: handlePress },
      { inputValue: "-", style: styles.operatorButton, handler: handlePress },
    ],
    [
      { inputValue: "0", style: styles.button, handler: handlePress },
      { inputValue: ".", style: styles.button, handler: handlePress },
      { inputValue: "C", style: styles.button, handler: handlePress },
      { inputValue: "+", style: styles.operatorButton, handler: handlePress },
    ],
    [
      {
        inputValue: "=",
        style: styles.calculateButton,
        handler: handleCalculate,
      },
    ],
  ];

  return (
    <View style={styles.container}>
      <View style={styles.inputContainer}>
        <TextInput multiline={false} style={styles.input} editable={false}>
          {input}
        </TextInput>
      </View>
      <View style={styles.buttonContainer}>
        {layout.map((rows, index) => (
          <View style={styles.row} key={index}>
            {rows.map((row) => (
              <TouchableOpacity
                key={row.inputValue}
                style={row.style}
                onPress={() => row.handler(row.inputValue)}
              >
                <Text style={styles.buttonText}>
                  {row?.displayText ? row.displayText : row.inputValue}
                </Text>
              </TouchableOpacity>
            ))}
          </View>
        ))}
      </View>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'flex-end',
    alignItems: 'center',
    // textAlign: "left",
    // marginLeft: 5,
    backgroundColor: '#5F9EA0',
  },
  buttonContainer: {
    flex: 3,
    justifyContent: "space-around",
  },
  inputContainer: {
    height: 160,
    justifyContent: "flex-end",
  },
  row: {
    flexDirection: 'row',
  },
  button: {
    justifyContent: 'center',
    alignItems: 'center',
    width: 80,
    height: 80,
    // borderWidth: 1,
    borderRadius: 25,
    backgroundColor: '#E0E0E0',
    margin: 5,
  },
  doubleButton: {
    width: 80,
    height: 80,
    borderRadius: 25,
  },
  buttonText: {
    fontSize: 28,
    textAlign: "center",
    color: "#fff",
  },
  oneButton: {
    backgroundColor: '#FFA500',
  },
  input: {
    fontSize: 25,
    marginBottom: 5,
  },
  operatorButton: {
    backgroundColor: "#FF9500",
    flex: 1,
    padding: 16,
    borderRadius: 38,
    margin: 6,
  },
  calculateButton: {
    backgroundColor: "#FF9500",
    borderRadius: 38,
    padding: 16,
    width: "100%",
  },
  // input2: {
  //   font
  // },
});

export default Calculator;